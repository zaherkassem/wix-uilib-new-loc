<rt-require dependency="baseUI" as="UI"/>
<UI.tooltip value="{this.props.tooltipValue}" disabled="{!this.props.tooltipValue}" styleType="{this.props.tooltipStyleType}">
    <div style="display: inline;">
        <UI.dropDown.select label="{this.props.label}" value="{this.props.value}" onChange="{this.props.onChange}" autotranslate="{false}" ref="dropdown"
                            infoText="{this.props.infoText}" infoTitle="{this.props.infoTitle}"
                            optionsWidth="{this.props.optionsWidth}"
                            className="text-style-dd {this.props.toolbarMode ? 'toolbar-mode' : ''}"
                            doNotFocus="{this.props.doNotFocus}">
            <UI.dropDown.option rt-repeat="style in this.getStyleOptions()" value="{style.cssClass}" key="{style.displayName + style.family}"
                                class="style-option {this.props.optionsClass ? this.props.optionsClass : ''}">
                <div class="style-option-header">
                    <div class="style-color-container">
                        <span class="style-color" style="background-color: {style.cssColor}"></span>
                    </div>
                    <span class="style-name" style="{this.getDisplayStyle(style)}">{this.translateIfNeeded(style.displayName)}</span>
                </div>
                <div class="style-option-footer">
                    <span class="style-size">{style.size}</span>
                    <span class="style-tag">&lt;{style.tag}&gt;</span>
                </div>
                <div class="style-option-label">{this.translateIfNeeded(style.displayName)}</div>
            </UI.dropDown.option>
            <UI.dropDown.option key="textStyleCustom" rt-if="this.isCustom()"
                                value="{this.props.value}"
                                class="style-option"
                                style="display: none;">
                {this.state.nullLabel}
            </UI.dropDown.option>
        </UI.dropDown.select>
    </div>
</UI.tooltip>
